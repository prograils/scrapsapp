.scrap_wrapper{data: {id: scrap.id}}
  %h4.pull-left.scrap_title
    = link_to scrap.title, get_scrap_path(scrap.organization, scrap)
    %small
      = draw_icon(scrap.is_public? ? 'eye-open' : 'eye-close', :class=>scrap.is_public? ? "icon-white" : "", :title=>scrap.is_public? ? "Public" : "Private")
  -#%span.badge.pull-left.file_number{:title=>"Associatied files: #{scrap.single_files.count(:id)}"}= scrap.single_files.count(:id)
  .clear
  - unless scrap.description.empty?
    %blockquote= simple_format scrap.description
  - unless show_all
    - sf = scrap.single_files.ordered.first
    - if sf
      = render :partial => '/scraps/single_file', :locals=>{:sf=>sf}
  - else
    - scrap.single_files.each do |sf|
      = render :partial => '/scraps/single_file', :locals=>{:sf=>sf}

  .btn-group.links
    - if current_user
      - if current_user.starred_scraps.member?(scrap)
        = link_to [:unstar, scrap.organization, scrap], :class=>"btn btn-sm btn-success", :title=>"Unstar" do
          = draw_icon('star', :class=>"icon-white")
      - else
        = link_to [:star, scrap.organization, scrap], :class=>"btn btn-sm btn-success", :title=>"Star" do
          = draw_icon('star', :class=>"")
      - if current_user.member_of?(scrap.organization)
        = link_to [:edit, scrap.organization, scrap], :class=>"btn btn-sm btn-success", :title=>"Edit" do
          = draw_icon('pencil', :class=>"icon-white")
        = link_to [scrap.organization, scrap], method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-sm btn-success", title: "Delete" do
          = draw_icon('trash', :class=>"icon-white")
    = link_to [scrap.organization, scrap], class: 'btn btn-sm btn-success', title: 'Comments' do
      = draw_icon('comment', class: 'icon-white')
      %span.label= scrap.comments.count(:id)
  - if show_all
    #comments_wrapper
      - scrap.comments.ordered.each do |comment|
        = render comment
      .col-lg-12.col-md-12.col-sm-12.comment
        .row
          .col-lg-1.col-md-1.col-sm-2
            = gravatar_image_tag current_user.email, :class=>"user_image", :gravatar => { :size => 50 }
          .col-lg-11.col-md-11.col-sm-10
            .row
              .col-lg-12.col-md-12.col-sm-12
                = form_for [scrap.organization, scrap, Comment.new], remote: true, html: { class: 'form-horizontal'} do |f|
                  = f.text_area :comment_body, class: 'form-control'
                  .pull-right
                    = f.submit t('.create_comment', default: 'Create comment'), class: 'btn btn-success btn-sm'
